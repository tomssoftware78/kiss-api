variables:
  CONTAINER_IMAGE: "192.168.70.7:8443/kiss/i2-kiss-api"

image: python:3.13.1-bookworm

stages:
  - docker_build
  - docker_deploy

docker_build_and_push:
  stage: docker_build
  image: docker:27.4.0
  variables:
    DOCKER_HOST: unix:///var/run/docker.sock
  script:
    - echo "Build Docker Image"
    - ls -la
    - pwd
    - docker info
    #- docker build --no-cache -t $CONTAINER_IMAGE:$CI_COMMIT_TAG .
    #- docker image push $CONTAINER_IMAGE:$CI_COMMIT_TAG
    - docker build --no-cache -t $CONTAINER_IMAGE:$CI_COMMIT_SHORT_SHA .
    - docker login 192.168.70.7:8443 -u admin -p DataWillTell 
    - docker image push $CONTAINER_IMAGE:$CI_COMMIT_SHORT_SHA
    
#  rules:
#    - if: '$CI_COMMIT_TAG'


docker_deploy_to_server:
  stage: docker_deploy
  image: docker:27.4.0
  variables:
    DOCKER_HOST: unix:///var/run/docker.sock
  script:
    - apk add --no-cache rsync
    - echo "Deploying to production server..."
    - mkdir -p ~/.ssh
    - echo "$SSH_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    #- ls -la ~/.ssh
    #- cat ~/.ssh/id_rsa
    - ssh -o StrictHostKeyChecking=no docker@192.168.70.7 "
        bash -c '
          pwd
          ls -la
          rm -rf i2-kiss-api
          mkdir -p ~/i2-kiss-api
          ls -la
        '
      "
    - rm ./docker-compose.yml
    - mv ./docker-compose-prd.yml ./docker-compose.yml
    - pwd
    - ls -la
    - cat ./docker-compose.yml
    #- sed -i "s|__DOCKER_TAG__|$CI_COMMIT_TAG|g" docker-compose.yml
    - sed -i "s|__DOCKER_TAG__|$CI_COMMIT_SHORT_SHA|g" docker-compose.yml
    - sed -i "s|__GIT_COMMIT__|$CI_COMMIT_SHORT_SHA|g" .env
    #- sed -i "s|__GIT_TAG__|$CI_COMMIT_TAG|g" .env
    - sed -i "s|__GIT_TAG__|$CI_COMMIT_SHORT_SHA|g" .env
    - rsync -e "ssh -o StrictHostKeyChecking=no" -avz ./docker-compose.yml docker@192.168.70.7:~/i2-kiss-api/docker-compose.yml
    - rsync -e "ssh -o StrictHostKeyChecking=no" -avz ./.env docker@192.168.70.7:~/i2-kiss-api/.env
    - | 
      ssh -o StrictHostKeyChecking=no docker@192.168.70.7 "
        export CONTAINER_IMAGE_SUB=$CONTAINER_IMAGE;
        #export CI_COMMIT_TAG_SUB=$CI_COMMIT_TAG;
        export CI_COMMIT_TAG_SUB=$CI_COMMIT_SHORT_SHA;
        export LOGS_FOLDER_ON_DOCKER_HOST_SUB=$LOGS_FOLDER_ON_DOCKER_HOST
        export OUTPUT_FOLDER_ON_DOCKER_HOST_SUB=$OUTPUT_FOLDER_ON_DOCKER_HOST
        bash -c '
          echo CONTAINER_IMAGE_SUB: \$CONTAINER_IMAGE_SUB; 
          echo CI_COMMIT_TAG_SUB: \$CI_COMMIT_TAG_SUB;
          cd i2-kiss-api
          pwd
          ls -la

          #mkdir -p \$LOGS_FOLDER_ON_DOCKER_HOST_SUB
          #docker stop kiss-data-extraction-tool;
          #docker rm kiss-data-extraction-tool;
          #echo start the container \$CONTAINER_IMAGE_SUB:\$CI_COMMIT_TAG_SUB;
          echo start the container \$CONTAINER_IMAGE_SUB:\$CI_COMMIT_TAG_SUB

          echo "Pull image"
          docker pull \$CONTAINER_IMAGE_SUB:\$CI_COMMIT_TAG_SUB
          docker compose down
          docker compose up -d
          #docker run -v \$LOGS_FOLDER_ON_DOCKER_HOST_SUB:/logs -v \$OUTPUT_FOLDER_ON_DOCKER_HOST_SUB:/output -d --name kiss-data-extraction-tool -p 9009:8086 #\$CONTAINER_IMAGE_SUB:\$CI_COMMIT_TAG_SUB
        '
      "
#  rules:
#    - if: '$CI_COMMIT_TAG'
  
  

